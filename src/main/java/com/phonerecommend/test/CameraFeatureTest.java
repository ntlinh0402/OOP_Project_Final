package com.phonerecommend.test;

import com.phonerecommend.model.Phone;
import com.phonerecommend.model.PhoneDescription;
import com.phonerecommend.repository.PhoneRepository;
import com.phonerecommend.repository.RepositoryFactory;
import com.phonerecommend.service.filter.impl.CameraFeatureFilter;
import com.phonerecommend.service.filter.impl.CameraFeatureFilter.CameraFeature;

import java.util.List;

/**
 * Class ƒë·ªÉ test camera features filtering
 */
public class CameraFeatureTest {

    public static void main(String[] args) {
        // Kh·ªüi t·∫°o repository
        RepositoryFactory.setRepositoryType(RepositoryFactory.RepositoryType.LOCAL_JSON);
        RepositoryFactory.setLocalJsonPath("data/phones.json");
        PhoneRepository repository = RepositoryFactory.getPhoneRepository();

        // L·∫•y t·∫•t c·∫£ ƒëi·ªán tho·∫°i
        List<Phone> phones = repository.getAllPhones();

        System.out.println("=== KI·ªÇM TRA D·ªÆ LI·ªÜU CAMERA C·ª¶A C√ÅC ƒêI·ªÜN THO·∫†I ===\n");

        // In ra th√¥ng tin camera c·ªßa m·ªôt v√†i ƒëi·ªán tho·∫°i ƒë·∫ßu
        for (int i = 0; i < Math.min(3, phones.size()); i++) {
            Phone phone = phones.get(i);
            printPhoneCameraInfo(phone);
        }

        System.out.println("\n=== TEST FILTER CH·ª§P X√ìA PH√îNG ===");
        CameraFeatureFilter portraitFilter = new CameraFeatureFilter(CameraFeature.PORTRAIT);
        testFilterWithAllPhones(phones, portraitFilter, "Ch·ª•p x√≥a ph√¥ng");

        System.out.println("\n=== TEST FILTER QUAY VIDEO 4K ===");
        CameraFeatureFilter video4kFilter = new CameraFeatureFilter(CameraFeature.VIDEO_4K);
        testFilterWithAllPhones(phones, video4kFilter, "Quay video 4K");

        System.out.println("\n=== TEST FILTER CH·ª§P ƒê√äM ===");
        CameraFeatureFilter nightFilter = new CameraFeatureFilter(CameraFeature.NIGHT_MODE);
        testFilterWithAllPhones(phones, nightFilter, "Ch·ª•p ƒë√™m");

        System.out.println("\n=== TEST FILTER K·∫æT H·ª¢P (CH·ª§P X√ìA PH√îNG + 4K) ===");
        CameraFeatureFilter combinedFilter = new CameraFeatureFilter(
                CameraFeature.PORTRAIT,
                CameraFeature.VIDEO_4K
        );
        testFilterWithAllPhones(phones, combinedFilter, "Ch·ª•p x√≥a ph√¥ng + 4K");
    }

    private static void printPhoneCameraInfo(Phone phone) {
        System.out.println("üì± " + phone.getName());
        System.out.println("Camera sau: " + phone.getDescription().getRearCamera());
        System.out.println("Camera tr∆∞·ªõc: " + phone.getDescription().getFrontCamera());
        System.out.println("T√≠nh nƒÉng camera: " + phone.getDescription().getCameraFeatures());
        System.out.println("Quay video: " + phone.getDescription().getAttribute("Quay video"));
        System.out.println("T√≠nh nƒÉng ƒë·∫∑c bi·ªát: " + phone.getDescription().getSpecialFeatures());
        System.out.println("---");
    }

    private static void testFilterWithAllPhones(List<Phone> phones, CameraFeatureFilter filter, String filterName) {
        System.out.println("ƒêang test filter: " + filterName);
        System.out.println("Total phones: " + phones.size());

        List<Phone> filteredPhones = filter.filter(phones);
        System.out.println("Phones matching filter: " + filteredPhones.size());

        if (!filteredPhones.isEmpty()) {
            System.out.println("C√°c ƒëi·ªán tho·∫°i th·ªèa m√£n:");
            for (Phone phone : filteredPhones) {
                System.out.println("‚úì " + phone.getName());
            }
        } else {
            System.out.println("‚ùå Kh√¥ng c√≥ ƒëi·ªán tho·∫°i n√†o th·ªèa m√£n ƒëi·ªÅu ki·ªán");
        }
        System.out.println();
    }

    /**
     * Test m·ªôt ƒëi·ªán tho·∫°i c·ª• th·ªÉ v·ªõi chi ti·∫øt debug
     */
    public static void testSpecificPhone() {
        // T·∫°o d·ªØ li·ªáu ƒëi·ªán tho·∫°i m·∫´u ƒë·ªÉ test
        Phone iPhone = new Phone();
        iPhone.setName("iPhone 16 Pro Max Test");

        PhoneDescription desc = new PhoneDescription();
        desc.setAttribute("Camera sau", "Camera ch√≠nh: 48MP, ch·ª•p x√≥a ph√¥ng, ch·ªëng rung quang h·ªçc");
        desc.setAttribute("T√≠nh nƒÉng camera", "Deep Fusion, HDR th√¥ng minh, Ch·∫ø ƒë·ªô Ban ƒê√™m, Ch·ª•p ·∫£nh to√†n c·∫£nh");
        desc.setAttribute("Quay video", "4K@60fps, 4K@120fps, 1080p@240fps");
        desc.setAttribute("Camera tr∆∞·ªõc", "12MP, TrueDepth");

        iPhone.setDescription(desc);

        // Test v·ªõi nhi·ªÅu features
        CameraFeatureFilter.testPhoneFeatures(iPhone,
                CameraFeature.PORTRAIT,    // C√≥: "ch·ª•p x√≥a ph√¥ng"
                CameraFeature.VIDEO_4K,    // C√≥: "4K"
                CameraFeature.NIGHT_MODE,  // C√≥: "Ch·∫ø ƒë·ªô Ban ƒê√™m"
                CameraFeature.STABILIZATION, // C√≥: "ch·ªëng rung"
                CameraFeature.MACRO        // Kh√¥ng c√≥: macro
        );
    }
}